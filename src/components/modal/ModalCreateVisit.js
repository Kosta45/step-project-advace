import { Modal } from "./index.js"
import { createCard } from "../../../src/constants/api.js";


export default class ModalCreateVisit extends Modal {
    constructor() {
        super({
            id: "create-visit",
            title: "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–∑–∏—Ç—É",
            content: `
        <form class="visit-form">
          <div class="form-group">
            <label for="visit-doctor">–õ—ñ–∫–∞—Ä</label>
            <select id="visit-doctor" name="doctor" required>
              <option value="">–û–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è</option>
              <option value="cardiologist">–ö–∞—Ä–¥—ñ–æ–ª–æ–≥</option>
              <option value="dentist">–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥</option>
              <option value="therapist">–¢–µ—Ä–∞–ø–µ–≤—Ç</option>
            </select>
          </div>

          <div class="form-group">
            <label for="visit-purpose">–ú–µ—Ç–∞ –≤—ñ–∑–∏—Ç—É</label>
            <input type="text" id="visit-purpose" name="purpose" required />
          </div>

          <div class="form-group">
            <label for="visit-description">–ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å</label>
            <textarea id="visit-description" name="description"></textarea>
          </div>

          <div class="form-group">
            <label for="visit-urgency">–¢–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å</label>
            <select id="visit-urgency" name="urgency" required>
              <option value="low">–ù–∏–∑—å–∫–∞</option>
              <option value="normal">–ó–≤–∏—á–∞–π–Ω–∞</option>
              <option value="high">–í–∏—Å–æ–∫–∞</option>
            </select>
          </div>

          <div class="modal-actions">
            <button type="submit" class="btn-create-visit">–°—Ç–≤–æ—Ä–∏—Ç–∏</button>
            <button type="button" class="btn-cancel-visit">–°–∫–∞—Å—É–≤–∞—Ç–∏</button>
          </div>
        </form>
      `
        });
    }

    create() {
        super.create();

        const form = this.modal.querySelector(".visit-form");
        const cancelBtn = this.modal.querySelector(".btn-cancel-visit");

        if (form) {
            form.addEventListener("submit", async (e) => {
                e.preventDefault();

                const formData = new FormData(form);
                const visit = Object.fromEntries(formData.entries());

                try {
                    const newVisit = await createCard(visit); // –≤–∏–∫–ª–∏–∫ API
                    console.log("‚úÖ –í—ñ–∑–∏—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ:", newVisit);

                    // üîπ –ú–æ–∂–Ω–∞ –æ–¥—Ä–∞–∑—É –æ–Ω–æ–≤–∏—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—ñ–∑–∏—Ç—ñ–≤ —É UI
                    // renderCard(newVisit);

                    this.close();
                } catch (err) {
                    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–∑–∏—Ç—É:", err.message);
                    alert("–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –≤—ñ–∑–∏—Ç. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –¥–∞–Ω—ñ.");
                }
            });
        }

        if (cancelBtn) {
            cancelBtn.addEventListener("click", () => this.close());
        }
    }
}
